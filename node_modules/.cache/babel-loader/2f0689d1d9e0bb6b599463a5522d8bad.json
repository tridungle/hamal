{"ast":null,"code":"var _templateObject = _taggedTemplateLiteralLoose([\"\\n  font-weight: bold;\\n\"], [\"\\n  font-weight: bold;\\n\"]),\n    _templateObject2 = _taggedTemplateLiteralLoose([\"\\n  text-align: left;\\n  width: 100%;\\n\"], [\"\\n  text-align: left;\\n  width: 100%;\\n\"]);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar Match = styled.span(_templateObject);\nvar UpperDiv = styled.div(_templateObject2);\n\nvar Prediction = function Prediction(_ref) {\n  var item = _ref.item;\n  var description = item.description,\n      structured_formatting = item.structured_formatting;\n  var firstMatchedString = structured_formatting && structured_formatting.main_text_matched_substrings.length > 0 && structured_formatting.main_text_matched_substrings[0];\n  var labelParts = null;\n\n  if (firstMatchedString) {\n    labelParts = {\n      before: description.substr(0, firstMatchedString.offset),\n      match: description.substr(firstMatchedString.offset, firstMatchedString.length),\n      after: description.substr(firstMatchedString.offset + firstMatchedString.length)\n    };\n  }\n\n  return React.createElement(UpperDiv, null, labelParts ? React.createElement(\"span\", null, labelParts.before, React.createElement(Match, null, labelParts.match), labelParts.after) : description);\n};\n\nPrediction.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  item: PropTypes.shape({\n    description: PropTypes.string,\n    structured_formatting: PropTypes.shape({\n      main_text_matched_substrings: PropTypes.arrayOf(PropTypes.shape({\n        length: PropTypes.number.isRequired,\n        offset: PropTypes.number.isRequired\n      }))\n    })\n  }).isRequired\n} : {};\nexport default Prediction;","map":null,"metadata":{},"sourceType":"module"}