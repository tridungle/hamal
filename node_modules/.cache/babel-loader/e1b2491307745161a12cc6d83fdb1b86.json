{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { EJSON } from \"bson\";\nimport ContentTypes from \"./ContentTypes\";\nimport Headers from \"./Headers\";\nimport { StitchRequest } from \"./StitchRequest\";\n\nvar StitchDocRequest = function (_super) {\n  __extends(StitchDocRequest, _super);\n\n  function StitchDocRequest(request, document) {\n    var _this = _super.call(this, request.method, request.path, request.headers, request.startedAt, request.body) || this;\n\n    _this.document = document;\n    return _this;\n  }\n\n  Object.defineProperty(StitchDocRequest.prototype, \"builder\", {\n    get: function () {\n      return new StitchDocRequest.Builder(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return StitchDocRequest;\n}(StitchRequest);\n\nexport { StitchDocRequest };\n\n(function (StitchDocRequest) {\n  var Builder = function (_super) {\n    __extends(Builder, _super);\n\n    function Builder(request) {\n      var _this = _super.call(this, request) || this;\n\n      if (request !== undefined) {\n        _this.document = request.document;\n      }\n\n      return _this;\n    }\n\n    Builder.prototype.withDocument = function (document) {\n      this.document = document;\n      return this;\n    };\n\n    Builder.prototype.build = function () {\n      if (this.document === undefined || !(this.document instanceof Object)) {\n        throw new Error(\"document must be set\");\n      }\n\n      if (this.headers === undefined) {\n        this.withHeaders({});\n      }\n\n      this.headers[Headers.CONTENT_TYPE] = ContentTypes.APPLICATION_JSON;\n      this.withBody(EJSON.stringify(this.document, {\n        relaxed: false\n      }));\n      return new StitchDocRequest(_super.prototype.build.call(this), this.document);\n    };\n\n    return Builder;\n  }(StitchRequest.Builder);\n\n  StitchDocRequest.Builder = Builder;\n})(StitchDocRequest || (StitchDocRequest = {}));","map":null,"metadata":{},"sourceType":"module"}