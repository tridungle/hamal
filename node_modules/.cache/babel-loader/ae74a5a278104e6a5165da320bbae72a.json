{"ast":null,"code":"import JWT from \"./JWT\";\nvar SLEEP_MILLIS = 60000;\nvar EXPIRATION_WINDOW_SECS = 300;\n\nvar AccessTokenRefresher = function () {\n  function AccessTokenRefresher(auth) {\n    this.auth = auth;\n  }\n\n  AccessTokenRefresher.prototype.shouldRefresh = function () {\n    var auth = this.auth;\n\n    if (auth === undefined) {\n      return false;\n    }\n\n    if (!auth.isLoggedIn) {\n      return false;\n    }\n\n    var info = auth.authInfo;\n\n    if (info === undefined) {\n      return false;\n    }\n\n    if (!info.isLoggedIn) {\n      return false;\n    }\n\n    var jwt;\n\n    try {\n      jwt = JWT.fromEncoded(info.accessToken);\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n\n    if (Date.now() / 1000 < jwt.expires - EXPIRATION_WINDOW_SECS) {\n      return false;\n    }\n\n    return true;\n  };\n\n  AccessTokenRefresher.prototype.run = function () {\n    var _this = this;\n\n    if (!this.shouldRefresh()) {\n      this.nextTimeout = setTimeout(function () {\n        return _this.run();\n      }, SLEEP_MILLIS);\n    } else {\n      this.auth.refreshAccessToken().then(function () {\n        _this.nextTimeout = setTimeout(function () {\n          return _this.run();\n        }, SLEEP_MILLIS);\n      }).catch(function () {\n        _this.nextTimeout = setTimeout(function () {\n          return _this.run();\n        }, SLEEP_MILLIS);\n      });\n    }\n  };\n\n  AccessTokenRefresher.prototype.stop = function () {\n    clearTimeout(this.nextTimeout);\n  };\n\n  return AccessTokenRefresher;\n}();\n\nexport default AccessTokenRefresher;","map":null,"metadata":{},"sourceType":"module"}