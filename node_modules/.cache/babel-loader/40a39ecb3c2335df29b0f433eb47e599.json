{"ast":null,"code":"import StitchError from \"../../StitchError\";\nimport StitchRequestError from \"../../StitchRequestError\";\nimport { StitchRequestErrorCode } from \"../../StitchRequestErrorCode\";\nimport StitchServiceError from \"../../StitchServiceError\";\nimport { StitchServiceErrorCode, stitchServiceErrorCodeFromApi } from \"../../StitchServiceErrorCode\";\nimport ContentTypes from \"../net/ContentTypes\";\nimport Headers from \"../net/Headers\";\nvar Fields;\n\n(function (Fields) {\n  Fields[\"ERROR\"] = \"error\";\n  Fields[\"ERROR_CODE\"] = \"error_code\";\n})(Fields || (Fields = {}));\n\nexport function wrapDecodingError(err) {\n  if (err instanceof StitchError) {\n    return err;\n  }\n\n  return new StitchRequestError(err, StitchRequestErrorCode.DECODING_ERROR);\n}\nexport function handleRequestError(response) {\n  if (response.body === undefined) {\n    throw new StitchServiceError(\"received unexpected status code \" + response.statusCode, StitchServiceErrorCode.Unknown);\n  }\n\n  var body;\n\n  try {\n    body = response.body;\n  } catch (e) {\n    throw new StitchServiceError(\"received unexpected status code \" + response.statusCode, StitchServiceErrorCode.Unknown);\n  }\n\n  var errorMsg = handleRichError(response, body);\n  throw new StitchServiceError(errorMsg, StitchServiceErrorCode.Unknown);\n}\n\nfunction handleRichError(response, body) {\n  if (response.headers[Headers.CONTENT_TYPE] === undefined || response.headers[Headers.CONTENT_TYPE] !== undefined && response.headers[Headers.CONTENT_TYPE] !== ContentTypes.APPLICATION_JSON) {\n    return body;\n  }\n\n  var bsonObj = JSON.parse(body);\n\n  if (!(bsonObj instanceof Object)) {\n    return body;\n  }\n\n  var doc = bsonObj;\n\n  if (doc[Fields.ERROR] === undefined) {\n    return body;\n  }\n\n  var errorMsg = doc[Fields.ERROR];\n\n  if (doc[Fields.ERROR_CODE] === undefined) {\n    return errorMsg;\n  }\n\n  var errorCode = doc[Fields.ERROR_CODE];\n  throw new StitchServiceError(errorMsg, stitchServiceErrorCodeFromApi(errorCode));\n}","map":null,"metadata":{},"sourceType":"module"}