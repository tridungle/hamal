{"ast":null,"code":"var _templateObject = _taggedTemplateLiteralLoose([\"\\n  \", \" \", \";\\n\"], [\"\\n  \", \" \", \";\\n\"]),\n    _templateObject2 = _taggedTemplateLiteralLoose([\"\\n  padding: 0.3125rem;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  line-height: 1.875rem;\\n  display: flex;\\n  align-items: center;\\n  font-size: 0.8125rem;\\n\"], [\"\\n  padding: 0.3125rem;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  line-height: 1.875rem;\\n  display: flex;\\n  align-items: center;\\n  font-size: 0.8125rem;\\n\"]);\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Prediction from \"../Prediction\";\nvar Wrapper = styled.div(_templateObject, function (props) {\n  return props.clickable && \"&:hover {background: #f5f5f5;cursor: pointer;} \";\n}, function (props) {\n  return props.active && \"background: #f5f5f5;\";\n});\nvar Item = styled.div(_templateObject2);\n\nvar ListItem = function (_React$Component) {\n  _inherits(ListItem, _React$Component);\n\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  ListItem.prototype.renderDefault = function renderDefault(item) {\n    var textNoResults = this.props.textNoResults;\n    return React.createElement(Item, null, item ? React.createElement(Prediction, {\n      item: item\n    }) : textNoResults);\n  };\n\n  ListItem.prototype.renderItem = function renderItem(item) {\n    var customRender = this.props.customRender;\n    return customRender ? customRender(item) : this.renderDefault(item);\n  };\n\n  ListItem.prototype.render = function render() {\n    var _props = this.props,\n        active = _props.active,\n        item = _props.item,\n        onClick = _props.onClick;\n    return React.createElement(Wrapper, {\n      active: active,\n      clickable: item,\n      onClick: item && function () {\n        return onClick(item);\n      }\n    }, this.renderItem(item));\n  };\n\n  return ListItem;\n}(React.Component);\n\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n  item: PropTypes.shape({\n    description: PropTypes.string,\n    matched_substrings: PropTypes.arrayOf(PropTypes.shape({\n      length: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired\n    }))\n  }),\n  customRender: PropTypes.func,\n  textNoResults: PropTypes.string\n} : {};\nListItem.defaultProps = {\n  active: false\n};\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}