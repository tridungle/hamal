{"ast":null,"code":"import { AuthEventKind, AuthRebindEvent, CoreStitchAppClient, CoreStitchServiceClientImpl, StitchAppClientInfo, StitchAppRequestClient } from \"mongodb-stitch-core-sdk\";\nimport StitchServiceClientImpl from \"../../services/internal/StitchServiceClientImpl\";\nimport StitchAuthImpl from \"../auth/internal/StitchAuthImpl\";\nimport StitchBrowserAppRoutes from \"../auth/internal/StitchBrowserAppRoutes\";\n\nvar StitchAppClientImpl = function () {\n  function StitchAppClientImpl(clientAppId, config) {\n    this.info = new StitchAppClientInfo(clientAppId, config.dataDirectory, config.localAppName, config.localAppVersion);\n    this.routes = new StitchBrowserAppRoutes(this.info.clientAppId);\n    var requestClient = new StitchAppRequestClient(clientAppId, config.baseUrl, config.transport);\n    this.auth = new StitchAuthImpl(requestClient, this.routes.authRoutes, config.storage, this.info);\n    this.coreClient = new CoreStitchAppClient(this.auth, this.routes);\n    this.serviceClients = [];\n    this.auth.addSynchronousAuthListener(this);\n  }\n\n  StitchAppClientImpl.prototype.getServiceClient = function (factory, serviceName) {\n    if (isServiceClientFactory(factory)) {\n      var serviceClient = new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, \"\");\n      this.bindServiceClient(serviceClient);\n      return factory.getClient(serviceClient, this.info);\n    } else {\n      var serviceClient = new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName);\n      this.bindServiceClient(serviceClient);\n      return factory.getNamedClient(serviceClient, this.info);\n    }\n  };\n\n  StitchAppClientImpl.prototype.getGeneralServiceClient = function (serviceName) {\n    var serviceClient = new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName);\n    this.bindServiceClient(serviceClient);\n    return new StitchServiceClientImpl(serviceClient);\n  };\n\n  StitchAppClientImpl.prototype.callFunction = function (name, args) {\n    return this.coreClient.callFunction(name, args);\n  };\n\n  StitchAppClientImpl.prototype.onActiveUserChanged = function (_, currentActiveUser, previousActiveUser) {\n    this.onRebindEvent(new AuthRebindEvent({\n      currentActiveUser: currentActiveUser,\n      kind: AuthEventKind.ActiveUserChanged,\n      previousActiveUser: previousActiveUser\n    }));\n  };\n\n  StitchAppClientImpl.prototype.bindServiceClient = function (coreStitchServiceClient) {\n    this.serviceClients.push(coreStitchServiceClient);\n  };\n\n  StitchAppClientImpl.prototype.onRebindEvent = function (rebindEvent) {\n    this.serviceClients.forEach(function (serviceClient) {\n      serviceClient.onRebindEvent(rebindEvent);\n    });\n  };\n\n  return StitchAppClientImpl;\n}();\n\nexport default StitchAppClientImpl;\n\nfunction isServiceClientFactory(factory) {\n  return factory.getClient !== undefined;\n}","map":null,"metadata":{},"sourceType":"module"}