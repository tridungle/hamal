{"ast":null,"code":"var _jsxFileName = \"/Users/danhalperin/Desktop/hamal/src/selectedApp/selectedAppWeather.js\";\nimport React, { Component } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment/min/moment-with-locales\";\nexport default class SelectedAppWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: undefined,\n      forecast: undefined\n    };\n    this.getForecast = this.getForecast.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(this.props.selectedAppInfo.latitude, \"&lon=\").concat(this.props.selectedAppInfo.longitude, \"&APPID=\", \"ENTER OPENWEATHERMAP API\", \"&units=metric\")).then(response => response.json()).then(json => {\n      console.log(json);\n      this.setState({\n        weather: json\n      });\n    });\n  }\n\n  getForecast() {\n    fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(this.props.selectedAppInfo.latitude, \"&lon=\").concat(this.props.selectedAppInfo.longitude, \"&APPID=\", \"ENTER OPENWEATHERMAP API\", \"&units=metric\")).then(response => response.json()).then(json => {\n      console.log(json);\n      this.setState({\n        forecast: json\n      });\n    });\n  }\n\n  render() {\n    if (this.state.forecast) {\n      var graphTimestamps = this.state.forecast.list.map(item => {\n        return moment(item.dt_txt).format(\"DD/MM HH:mm\");\n      });\n      var graphTemps = this.state.forecast.list.map(item => {\n        return item.main.temp;\n      });\n      var options = {\n        chart: {\n          foreColor: \"#ffffff\",\n          selection: {\n            enabled: true,\n            type: \"x\"\n          },\n          animations: {\n            enabled: false\n          }\n        },\n        legend: {\n          show: false\n        },\n        tooltip: {\n          enabled: true,\n          theme: \"pallete1\"\n        },\n        grid: {\n          show: false\n        },\n        colors: [\"#ffffff\"],\n        fill: {\n          colors: [\"#ffffff\"]\n        },\n        xaxis: {\n          categories: graphTimestamps,\n          labels: {\n            show: false\n          }\n        },\n        subtitle: {\n          text: \"\\u05EA\\u05D7\\u05D6\\u05D9\\u05EA \\u05D4\\u05E9\\u05D1\\u05D5\\u05E2\",\n          align: \"center\",\n          floating: true,\n          style: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            color: \"#ffffff\"\n          }\n        }\n      };\n      var series = [{\n        name: \"&deg;C\",\n        data: graphTemps\n      }];\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.weather && !this.state.weather.message ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"m-2 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\u05D8\\u05DE\\u05E4\\u05E8\\u05D8\\u05D5\\u05E8\\u05D4: \", this.state.weather.main.temp, \"\\xB0\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"\\u05DE\\u05E7\\u05E1\\u05D9\\u05DE\\u05D5\\u05DD \\u05DC\\u05D4\\u05D9\\u05D5\\u05DD: \", this.state.weather.main.temp_max, \"\\xB0\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\u05DE\\u05D9\\u05E0\\u05D9\\u05DE\\u05D5\\u05DD \\u05DC\\u05D4\\u05D9\\u05D5\\u05DD: \", this.state.weather.main.temp_min, \"\\xB0\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\u05DB\\u05D9\\u05D5\\u05D5\\u05DF \\u05D4\\u05E8\\u05D5\\u05D7: \", this.state.weather.wind.deg, \"\\xB0\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"\\u05DE\\u05D4\\u05D9\\u05E8\\u05D5\\u05EA \\u05D4\\u05E8\\u05D5\\u05D7: \", this.state.weather.wind.speed, \"km/h\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\u05DC\\u05D7\\u05D5\\u05EA: \", this.state.weather.main.humidity, \"%\")), React.createElement(\"hr\", {\n      style: {\n        borderTop: \"1px solid white\",\n        padding: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.state.forecast ? React.createElement(FadeIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"m-2\",\n      dir: \"ltr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      options: options,\n      series: series,\n      type: \"line\",\n      width: \"100%\",\n      style: {\n        maxWidth: \"300 !important\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      class: \"btn btn-outline-light font-weight-bold\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => this.getForecast(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"\\u05EA\\u05D7\\u05D6\\u05D9\\u05EA \\u05E9\\u05DC \", this.props.selectedAppInfo.city))) : null, this.state.weather && this.state.weather.message ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      class: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"\\u05D0\\u05D9\\u05DF \\u05D7\\u05D9\\u05D1\\u05D5\\u05E8 \\u05DC Weather API\"), React.createElement(\"h3\", {\n      class: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u05E9\\u05D2\\u05D9\\u05D0\\u05D4:\"), React.createElement(\"h3\", {\n      class: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.weather.message)) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/danhalperin/Desktop/hamal/src/selectedApp/selectedAppWeather.js"],"names":["React","Component","FadeIn","Chart","moment","SelectedAppWeather","constructor","props","state","weather","undefined","forecast","getForecast","bind","componentDidMount","fetch","selectedAppInfo","latitude","longitude","then","response","json","console","log","setState","render","graphTimestamps","list","map","item","dt_txt","format","graphTemps","main","temp","options","chart","foreColor","selection","enabled","type","animations","legend","show","tooltip","theme","grid","colors","fill","xaxis","categories","labels","subtitle","text","align","floating","style","fontSize","fontWeight","color","series","name","data","message","temp_max","temp_min","wind","deg","speed","humidity","borderTop","padding","maxWidth","cursor","city"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Chart from \"react-apexcharts\";\nimport moment from \"moment/min/moment-with-locales\";\n\nexport default class SelectedAppWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: undefined,\n      forecast: undefined\n    };\n    this.getForecast = this.getForecast.bind(this);\n  }\n  componentDidMount() {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${\n        this.props.selectedAppInfo.latitude\n      }&lon=${\n        this.props.selectedAppInfo.longitude\n      }&APPID=${\"ENTER OPENWEATHERMAP API\"}&units=metric`\n    )\n      .then(response => response.json())\n      .then(json => {\n        console.log(json);\n        this.setState({ weather: json });\n      });\n  }\n  getForecast() {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${\n        this.props.selectedAppInfo.latitude\n      }&lon=${\n        this.props.selectedAppInfo.longitude\n      }&APPID=${\"ENTER OPENWEATHERMAP API\"}&units=metric`\n    )\n      .then(response => response.json())\n      .then(json => {\n        console.log(json);\n        this.setState({\n          forecast: json\n        });\n      });\n  }\n  render() {\n    if (this.state.forecast) {\n      var graphTimestamps = this.state.forecast.list.map(item => {\n        return moment(item.dt_txt).format(\"DD/MM HH:mm\");\n      });\n      var graphTemps = this.state.forecast.list.map(item => {\n        return item.main.temp;\n      });\n      var options = {\n        chart: {\n          foreColor: \"#ffffff\",\n          selection: {\n            enabled: true,\n            type: \"x\"\n          },\n          animations: {\n            enabled: false\n          }\n        },\n        legend: {\n          show: false\n        },\n        tooltip: {\n          enabled: true,\n          theme: \"pallete1\"\n        },\n        grid: {\n          show: false\n        },\n        colors: [\"#ffffff\"],\n        fill: {\n          colors: [\"#ffffff\"]\n        },\n        xaxis: {\n          categories: graphTimestamps,\n          labels: {\n            show: false\n          }\n        },\n        subtitle: {\n          text: `תחזית השבוע`,\n          align: \"center\",\n          floating: true,\n          style: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            color: \"#ffffff\"\n          }\n        }\n      };\n      var series = [\n        {\n          name: \"&deg;C\",\n          data: graphTemps\n        }\n      ];\n    }\n    return (\n      <div>\n        {this.state.weather && !this.state.weather.message ? (\n          <div>\n            <FadeIn>\n              <div class=\"m-2 text-center\">\n                <h3>טמפרטורה: {this.state.weather.main.temp}&deg;</h3>\n                <h6>מקסימום להיום: {this.state.weather.main.temp_max}&deg;</h6>\n                <h6>מינימום להיום: {this.state.weather.main.temp_min}&deg;</h6>\n                <br />\n                <h6>כיוון הרוח: {this.state.weather.wind.deg}&deg;</h6>\n                <h6>מהירות הרוח: {this.state.weather.wind.speed}km/h</h6>\n                <br />\n                <h6>לחות: {this.state.weather.main.humidity}%</h6>\n              </div>\n              <hr style={{ borderTop: \"1px solid white\", padding: \"0\" }} />\n              {this.state.forecast ? (\n                <FadeIn>\n                  <div class=\"m-2\" dir=\"ltr\">\n                    <Chart\n                      options={options}\n                      series={series}\n                      type=\"line\"\n                      width=\"100%\"\n                      style={{\n                        maxWidth: \"300 !important\"\n                      }}\n                    />\n                  </div>\n                </FadeIn>\n              ) : (\n                <div\n                  class=\"btn btn-outline-light font-weight-bold\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => this.getForecast()}\n                >\n                  תחזית של {this.props.selectedAppInfo.city}\n                </div>\n              )}\n            </FadeIn>\n          </div>\n        ) : null}\n        {this.state.weather && this.state.weather.message ? (\n          <div>\n            <h3 class=\"mt-5\">אין חיבור ל Weather API</h3>\n            <h3 class=\"mt-5\">שגיאה:</h3>\n            <h3 class=\"mt-5\">{this.state.weather.message}</h3>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}