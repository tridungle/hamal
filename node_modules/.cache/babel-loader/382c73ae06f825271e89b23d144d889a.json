{"ast":null,"code":"var _templateObject = _taggedTemplateLiteralLoose([\"\\n  text-align: end;\\n  padding-right: 0.3125rem;\\n\"], [\"\\n  text-align: end;\\n  padding-right: 0.3125rem;\\n\"]);\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PoweredByGoogleImage from \"../../images/powered_by_google/desktop/PoweredByGoogleImage\";\nvar GoogleWrapper = styled.div(_templateObject);\n\nvar PoweredByGoogleLogo = function (_React$Component) {\n  _inherits(PoweredByGoogleLogo, _React$Component);\n\n  function PoweredByGoogleLogo() {\n    _classCallCheck(this, PoweredByGoogleLogo);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  PoweredByGoogleLogo.prototype.render = function render() {\n    return React.createElement(GoogleWrapper, null, React.createElement(\"img\", {\n      alt: \"Powered By Google\",\n      src: PoweredByGoogleImage\n    }));\n  };\n\n  return PoweredByGoogleLogo;\n}(React.Component);\n\nexport default PoweredByGoogleLogo;","map":null,"metadata":{},"sourceType":"module"}